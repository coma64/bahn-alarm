// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package squeries

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/sqlc-dev/pqtype"
)

type Alarmurgency string

const (
	AlarmurgencyInfo  Alarmurgency = "info"
	AlarmurgencyWarn  Alarmurgency = "warn"
	AlarmurgencyError Alarmurgency = "error"
)

func (e *Alarmurgency) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Alarmurgency(s)
	case string:
		*e = Alarmurgency(s)
	default:
		return fmt.Errorf("unsupported scan type for Alarmurgency: %T", src)
	}
	return nil
}

type NullAlarmurgency struct {
	Alarmurgency Alarmurgency
	Valid        bool // Valid is true if Alarmurgency is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAlarmurgency) Scan(value interface{}) error {
	if value == nil {
		ns.Alarmurgency, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Alarmurgency.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAlarmurgency) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Alarmurgency), nil
}

type Alarm struct {
	ID          int64
	Receiverid  int64
	Createdat   time.Time
	Urgency     Alarmurgency
	Departureid sql.NullInt64
	Message     string
}

type Bahnapisearchresponse struct {
	ID        int64
	Data      pqtype.NullRawMessage
	Createdat time.Time
	Url       string
}

type Bahnstation struct {
	ID         int64
	Externalid sql.NullString
	Name       string
}

type Connection struct {
	ID                       int64
	Trackedbyid              int64
	Fromid                   int64
	Toid                     int64
	Departuremarginminutes   int32
	Departureinfohistorydays int32
}

type Departure struct {
	ID           int64
	Connectionid int64
	Departure    time.Time
	Nextcheck    time.Time
}

type Departureinfo struct {
	Departureid   int64
	Day           time.Time
	Scheduledtime time.Time
	Actualtime    sql.NullTime
}

type Fatdeparture struct {
	ID                     int64
	Connectionid           int64
	Departure              time.Time
	Nextcheck              time.Time
	Fromstationid          sql.NullString
	Fromstationname        string
	Tostationid            sql.NullString
	Tostationname          string
	Departuremarginminutes int32
	Trackedbyid            int64
	Delayminutes           interface{}
	Status                 string
}

type Invitetoken struct {
	ID          int64
	Token       string
	Createdbyid int64
	Usedbyid    sql.NullInt64
	Expiresat   sql.NullTime
}

type Pushnotificationsub struct {
	ID              int64
	Ownerid         int64
	Createdat       time.Time
	Rawsubscription json.RawMessage
	Name            string
	Isenabled       bool
}

type User struct {
	ID                           int64
	Name                         string
	Passwordhash                 string
	Createdat                    time.Time
	Isadmin                      bool
	Notificationthresholdminutes int32
}
